app-id: info.cemu.Cemu
runtime: org.freedesktop.Platform
runtime-version: '24.08'
sdk: org.freedesktop.Sdk

command: Cemu-wrapper

finish-args:
  - --device=all
  - --socket=fallback-x11
  - --socket=wayland
  - --socket=pulseaudio
  - --share=ipc
  - --share=network
  - --env=LC_ALL=C
  - --filesystem=host:ro
  - --filesystem=home/.local/share/applications:create
  - --filesystem=xdg-run/app/com.discordapp.Discord:ro
  - --filesystem=xdg-run/app/com.discordapp.DiscordCanary:ro

modules:
  - shared-modules/libusb/libusb.json

  - name: hidapi
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://github.com/libusb/hidapi/archive/refs/tags/hidapi-0.14.0.tar.gz
        sha256: a5714234abe6e1f53647dd8cba7d69f65f71c558b7896ed218864ffcf405bcbd
        x-checker-data:
          type: anitya
          project-id: 5594
          stable-only: true
          url-template: https://github.com/libusb/hidapi/archive/refs/tags/hidapi-$version.tar.gz
    cleanup:
      - /include
      - /lib/cmake
      - /lib/pkgconfig

  - name: pugixml
    buildsystem: cmake-ninja
    config-opts:
      - -DBUILD_SHARED_LIBS=ON
    cleanup:
      - /include
      - /lib/cmake
      - /lib/pkgconfig
    sources:
      - type: archive
        url: https://github.com/zeux/pugixml/releases/download/v1.15/pugixml-1.15.tar.gz
        sha256: 655ade57fa703fb421c2eb9a0113b5064bddb145d415dd1f88c79353d90d511a
        x-checker-data:
          type: anitya
          project-id: 3728
          url-template: https://github.com/zeux/pugixml/releases/download/v$version/pugixml-$version.tar.gz


  - name: boost
    buildsystem: simple
    build-commands:
      - ./bootstrap.sh --prefix=${FLATPAK_DEST} --with-toolset=gcc --with-libraries=filesystem,system,program_options,nowide
      - ./b2 install variant=release link=shared runtime-link=shared cxxflags="$CXXFLAGS"
        linkflags="$LDFLAGS" -j ${FLATPAK_BUILDER_N_JOBS}
    cleanup:
      - /include
      - /lib/cmake
    sources:
      - type: archive
        url: https://archives.boost.org/release/1.88.0/source/boost_1_88_0.tar.bz2
        sha256: 46d9d2c06637b219270877c9e16155cbd015b6dc84349af064c088e9b5b12f7b
        x-checker-data:
          type: anitya
          project-id: 6845
          stable-only: true
          url-template: https://archives.boost.org/release/$version/source/boost_${major}_${minor}_${patch}.tar.bz2
          versions: {'!=': 1.87.0}

  - name: libzip
    buildsystem: cmake-ninja
    config-opts:
      - -DBUILD_DOC=OFF
      - -DBUILD_EXAMPLES=OFF
      - -DBUILD_REGRESS=OFF
      - -DBUILD_TOOLS=OFF
    cleanup:
      - /bin
      - /include
      - /lib/cmake
      - /lib/pkgconfig
    sources:
      - type: archive
        url: https://libzip.org/download/libzip-1.11.3.tar.xz
        mirror-urls:
          - https://github.com/nih-at/libzip/releases/download/v1.10.1/libzip-1.10.1.tar.xz
        sha256: 9509d878ba788271c8b5abca9cfde1720f075335686237b7e9a9e7210fe67c1b
        x-checker-data:
          type: anitya
          project-id: 10649
          url-template: https://libzip.org/download/libzip-$version.tar.xz

  - name: rapidjson
    buildsystem: cmake-ninja
    config-opts:
      - -DRAPIDJSON_BUILD_DOC=OFF
      - -DRAPIDJSON_BUILD_EXAMPLES=OFF
      - -DRAPIDJSON_BUILD_TESTS=OFF
    cleanup:
      - /include
      - /lib/cmake
      - /lib/pkgconfig
      - /share/doc
    sources:
      - type: git
        url: https://github.com/Tencent/rapidjson.git
        commit: a95e013b97ca6523f32da23f5095fcc9dd6067e5

  - name: glm
    buildsystem: cmake-ninja
    cleanup: ['*']
    no-make-install: true
    post-install:
      - install -d ${FLATPAK_DEST}/include
      - cp -R glm ${FLATPAK_DEST}/include
      - cp -R cmake/glm ${FLATPAK_DEST}/lib/cmake
    sources:
      - type: archive
        url: https://github.com/g-truc/glm/releases/download/0.9.9.8/glm-0.9.9.8.zip
        sha256: 37e2a3d62ea3322e43593c34bae29f57e3e251ea89f4067506c94043769ade4c

  - name: wxWidgets
    buildsystem: cmake-ninja
    config-opts:
      - -DwxUSE_DOC_VIEW_ARCHITECTURE=OFF
      - -DwxUSE_HELP=OFF
      #- -DwxUSE_HTML=OFF
      - -DwxUSE_RICHTEXT=ON
      - -DwxUSE_WEBVIEW=OFF
      - -DwxUSE_STC=OFF
      - -DwxUSE_MDI_ARCHITECTURE=OFF
      - -DwxUSE_MDI=OFF
      - -DwxUSE_ARCHIVE_STREAMS=OFF
      - -DwxUSE_ACTIVEX=OFF
      - -DwxUSE_MEDIACTRL=OFF
      - -DwxUSE_WEBREQUEST=OFF
      - -DwxUSE_SECRETSTORE=OFF
      - -DwxUSE_SOUND=OFF
      - -DwxUSE_LIBSDL=OFF
      - -DwxUSE_RIBBON=OFF
      - -DwxUSE_SVG=OFF
      - -DwxUSE_WXHTML_HELP=OFF
      - -DwxUSE_PROPGRID=ON
      - -DwxUSE_OPENGL=ON
      - -DwxUSE_XRC=ON
    cleanup:
      - /bin
      - /include
      - /lib/cmake
      - /lib/wx
      - /share
    sources:
      - type: archive
        url: https://github.com/wxWidgets/wxWidgets/releases/download/v3.2.7/wxWidgets-3.2.7.tar.bz2
        sha256: 69a1722f874d91cd1c9e742b72df49e0fab02890782cf794791c3104cee868c6
        x-checker-data:
          type: anitya
          project-id: 5150
          stable-only: true
          url-template: https://github.com/wxWidgets/wxWidgets/releases/download/v$version/wxWidgets-$version.tar.bz2

  - name: spirv-tools
    buildsystem: cmake-ninja
    sources:
      - type: git
        url: https://github.com/KhronosGroup/SPIRV-Tools.git
        tag: v2024.1
        commit: 04896c462d9f3f504c99a4698605b6524af813c1
      - type: git
        url: https://github.com/KhronosGroup/SPIRV-Headers.git
        tag: vulkan-sdk-1.3.283.0
        commit: 4f7b471f1a66b6d06462cd4ba57628cc0cd087d7
        dest: external/spirv-headers
    cleanup:
      - /bin
      - /include
      - /lib

  - name: Cemu
    buildsystem: cmake-ninja
    config-opts:
      - -DPORTABLE=false
      - -DENABLE_VCPKG=false
    sources:
      - type: git
        url: https://github.com/cemu-project/Cemu
        tag: v2.6
        commit: a6fb0a48eb437a8a41c13b782ac8ae0433bf8f98
        disable-submodules: true
        x-checker-data:
          is-main-source: true
          type: json
          url: https://api.github.com/repos/cemu-project/Cemu/releases/latest
          version-query: .tag_name | sub("^v"; "")
          timestamp-query: .published_at
          tag-query: .tag_name
      - type: git
        url: https://github.com/mozilla/cubeb
        commit: 2071354a69aca7ed6df3b4222e305746c2113f60
        dest: dependencies/cubeb
      - type: git
        url: https://github.com/Exzap/ZArchive
        dest: dependencies/ZArchive
        tag: v0.1.2
      - type: git
        url: https://github.com/ocornut/imgui
        dest: dependencies/imgui
        commit: f65bcf481ab34cd07d3909aab1479f409fa79f2f
      - type: shell
        commands:
          - sed -i -E " s/set\(EMULATOR_VERSION_MAJOR .*/set(EMULATOR_VERSION_MAJOR
            \"$(git describe --tag | sed -E 's/v([0-9]+)\..*/\1/')\" CACHE STRING
            \"\")/g; s/set\(EMULATOR_VERSION_MINOR .*/set(EMULATOR_VERSION_MINOR \"$(git
            describe --tag | sed -E 's/v[0-9]+\.([0-9]+).*/\1/')\" CACHE STRING \"\")/g
            " CMakeLists.txt
      - type: script
        commands:
          - |
            for d in DiscordCanary Discord; do
              for i in {0..9}; do
                test -S $XDG_RUNTIME_DIR/discord-ipc-$i ||
                  ln -sf {app/com.discordapp.$d,$XDG_RUNTIME_DIR}/discord-ipc-$i;
              done
            done
            Cemu_relwithdebinfo "$@"
        dest-filename: Cemu-wrapper
      - type: script
        dest-filename: dev_release_metainfo.py
        commands:
          - |
            import os
            import xml.etree.ElementTree as ET
            meta_file = os.environ.get('AS_META_FILE')
            version = os.environ.get('AS_META_VERSION')
            release_type = os.environ.get('AS_META_TYPE')
            release_date = os.environ.get('AS_META_DATE')
            release_url = os.environ.get('AS_META_URL')
            tree = ET.parse(meta_file)
            root = tree.getroot()
            el_releases = root.find('releases')
            for el_release in el_releases:
              el_releases.remove(el_release)
            el_release = ET.SubElement(el_releases, 'release')
            el_url = ET.SubElement(el_release, 'url')
            el_url.text = release_url
            el_release.attrib['type'] = release_type
            el_release.attrib['date'] = release_date
            el_release.attrib['version'] = version
            ET.indent(tree, space='  ', level=0)
            tree.write(meta_file, encoding='utf8')
    post-install:
      - cp -r bin/gameProfiles ${FLATPAK_DEST}/share/Cemu/
      - cp -r bin/resources ${FLATPAK_DEST}/share/Cemu/
      - AS_META_DATE="$(git log -1 --format=%ci | awk '{print $1}')" AS_META_FILE='dist/linux/info.cemu.Cemu.metainfo.xml'
        AS_META_URL="https://github.com/cemu-project/Cemu/releases/tag/$(git describe
        --tags)" AS_META_TYPE='stable' AS_META_VERSION="$(git describe --tags | tr
        -d 'v')" python ./dev_release_metainfo.py
      - install -Dm644 -t ${FLATPAK_DEST}/share/appdata/ dist/linux/info.cemu.Cemu.metainfo.xml
      - install -Dm644 -t ${FLATPAK_DEST}/share/applications/ dist/linux/info.cemu.Cemu.desktop
      - install -Dm644 -t ${FLATPAK_DEST}/share/icons/hicolor/128x128/apps/ dist/linux/info.cemu.Cemu.png
      - desktop-file-edit --set-key=Exec --set-value="${FLATPAK_DEST}/bin/Cemu-wrapper"
        ${FLATPAK_DEST}/share/applications/info.cemu.Cemu.desktop
      - install -D -t ${FLATPAK_DEST}/bin/ bin/Cemu_relwithdebinfo Cemu-wrapper
